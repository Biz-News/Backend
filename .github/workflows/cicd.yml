name: CI / CD

on:
  push:
    branches: [ "main" ]  # main 브랜치에 push 시 실행

jobs:
  build:
    name: Build & Docker Push
    runs-on: ubuntu-latest
    steps:

      # 1. 코드 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # 2. JDK 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. `application.yml` 설정 (Secrets에서 가져오기)
      - name: Set YML
        run: |
          mkdir -p src/main/resources
          echo "${{ secrets.APPLICATION_YML }}" > src/main/resources/application.yml
          find src

      # 4. `gradlew` 실행 권한 부여
      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      # 5. Spring Boot 빌드 (테스트 제외)
      - name: Spring Boot Build
        run: ./gradlew clean build -x test

      # 6. Docker 이미지 빌드
      - name: Docker Image Build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGENAME }} .

      # 7. Docker Hub 로그인
      - name: Docker Hub Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # 8. Docker Hub에 이미지 푸시
      - name: Docker Hub Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_IMAGENAME }}

  deploy:
    name: Deploy to EC2
    needs: build
    runs-on: ubuntu-latest
    steps:
      # 코드 체크아웃 추가
      - name: Checkout code
        uses: actions/checkout@v3

      # deploy.sh 파일을 EC2로 전송
      - name: Copy deploy script to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          port: ${{ secrets.EC2_SSH_PORT }}
          source: "deploy.sh"
          target: "/home/${{ secrets.EC2_USERNAME }}"

      # 9. AWS EC2에 SSH 접속하여 배포 진행
      - name: AWS EC2 Connection
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}  # SSH Key를 사용하여 보안 강화
          port: ${{ secrets.EC2_SSH_PORT }}
          timeout: 60s
          script: |
            export DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}
            export DOCKERHUB_IMAGENAME=${{ secrets.DOCKERHUB_IMAGENAME }}
            
            chmod +x deploy.sh
            ./deploy.sh